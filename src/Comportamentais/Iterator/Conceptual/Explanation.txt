Iterator Design Pattern

Intenção: Permite que você percorra elementos de uma coleção sem expor sua
representação subjacente (lista, pilha, árvore, etc.).

--- Código ---

(1): Retornar o elemento atual.

(2): Retornar o elemento atual e avançar para o próximo elemento.

(3): Retornar a chave do elemento atual.

(4): Verifica se a posição atual é válida.

(5): Rebobina o Iterator para o primeiro elemento.

(6): Recuperar um iterador externo.

(7): Os Iteradores concretos implementam vários algoritmos de travessia. Estas classes
armazenam a posição atual de travessia em todos os momentos.

(8): Armazena a atual posição de travessia. Um iterador pode ter muitos
outros campos para armazenar o estado de iteração, especialmente quando é posto
para trabalhar com um tipo particular de coleção.

(9): Esta variável indica a direção da travessia.

(10): As coleções concretas fornecem um ou vários métodos para a recuperação dos items
instâncias iteradoras, compatíveis com a classe de coleção.

(11): O código do cliente pode ou não saber sobre o Iterador ou  a Classe Concreta de Coleção,
isso vai depender do nível de indireção que você queira manter em seu programa.